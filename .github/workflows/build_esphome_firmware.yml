name: Build ESPHome Firmware

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!index.html'
      - '!*.md'
      - '!.github/workflows/*'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual runs

permissions:
  contents: write
  
jobs:
  build-firmware:
    runs-on: ubuntu-latest
    name: build
    strategy:
      matrix:
        files:
          - "circuitsetup-gdo-default.yaml"
          - "circuitsetup-gdo-dry-contact.yaml"
          - "6chan_energy_meter_main_board.yaml"
          - "6chan_energy_meter-1-add-on.yaml"
          - "6chan_energy_meter_main_ethernet.yaml"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true     # keep token for subsequent git push
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download ESPHome Config Files
        run: |
          curl -L -o circuitsetup-gdo-default.yaml https://raw.githubusercontent.com/CircuitSetup/circuitsetup-esphome/master/circuitsetup-gdo-default.yaml
          curl -L -o circuitsetup-gdo-dry-contact.yaml https://raw.githubusercontent.com/CircuitSetup/circuitsetup-esphome/master/circuitsetup-gdo-dry-contact.yaml
          curl -L -o 6chan_energy_meter_main_board.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_main_board.yaml
          curl -L -o 6chan_energy_meter-1-add-on.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter-1-add-on.yaml
          curl -L -o 6chan_energy_meter_main_ethernet.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_main_ethernet.yaml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install ESPHome
        run: | 
          pip3 install wheel
          pip3 install esphome

      - name: Get ESPHome version
        id: esphome_version
        run: |
          version=$(esphome version | grep 'Version:' | sed 's/Version: //')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Compile ESPHome
        run: esphome -v compile "${{ matrix.files }}"

      - name: Create a firmware directory
        run: mkdir -p firmware

      - name: Move the single combined file
        id: firmware
        run: |
          filename=$(basename "${{ matrix.files }}" .yaml)-${{ steps.esphome_version.outputs.version }}.bin
          find .esphome/build -type f -name "firmware.factory.bin" -exec \
            mv {} "firmware/${filename}" \;
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: Create a manifests directory
        run: mkdir -p manifests
        
      - name: Build Manifest for Secplus GDO
        if: ${{ endsWith(matrix.files, 'circuitsetup-gdo-default.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup Security+ Garage Door Opener
          MANIFEST_FNAME: manifest_secplus_gdo.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for GDO Dry Contact
        if: ${{ endsWith(matrix.files, 'circuitsetup-gdo-dry-contact.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup Garage Door Opener Dry Contact
          MANIFEST_FNAME: manifest_gdo_dry_contact.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_main_board.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Main
          MANIFEST_FNAME: manifest_6_channel_meter.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter + 1 Add-on
        if: ${{ endsWith(matrix.files, '6chan_energy_meter-1-add-on.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Main + 1 Add-on
          MANIFEST_FNAME: manifest_6_channel_meter-1-add-on.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter Ethernet
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_main_ethernet.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Ethernet
          MANIFEST_FNAME: manifest_6_channel_meter_ethernet.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}
        
      - name: Commit firmware to repo
        if: always()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add firmware
          git add manifests
          git commit -m "Add compiled firmware for all devices" || echo "No changes to commit."
          git pull --rebase origin main
          git push origin HEAD:main
