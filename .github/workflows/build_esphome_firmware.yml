name: Build ESPHome Firmware

on:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!index.html'
      - '!*.md'
      - '!.github/workflows/*'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual runs
    inputs:
      force_build:
        description: 'Force build even if firmware is up to date'
        required: false
        default: 'false'
  schedule:
    - cron: '0 6 * * 1,4'

permissions:
  contents: write

concurrency:
  group: build_esphome_firmware
  cancel-in-progress: true

jobs:
  determine-build:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.set-files.outputs.files }}
      version: ${{ steps.esphome_version.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install ESPHome
        run: |
          pip3 install wheel
          pip3 install esphome

      - name: Get ESPHome version
        id: esphome_version
        run: |
          version=$(esphome version | grep 'Version:' | sed 's/Version: //')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Determine firmware needing build
        id: set-files
        run: |
          version="${{ steps.esphome_version.outputs.version }}"
          force_build="${{ github.event.inputs.force_build }}"
          configs=(
            "circuitsetup-gdo-default.yaml"
            "circuitsetup-gdo-dry-contact.yaml"
            "6chan_energy_meter_main_board.yaml"
            "6chan_energy_meter_1-addon.yaml"
            "6chan_energy_meter_2-addons.yaml"
            "6chan_energy_meter_main_ethernet.yaml"
            "6chan_energy_meter_1-addon_ethernet.yaml"
            "6chan_energy_meter_2-addons_ethernet.yaml"
          )
          
          needs_build=()
          mkdir -p firmware
      
          if [[ "$force_build" == "true" ]]; then
            echo "Force build enabled. Adding all configs."
            needs_build=("${configs[@]}")
          else
            for config in "${configs[@]}"; do
              base=$(basename "$config" .yaml)
              expected="firmware/${base}-${version}.bin"
              if [[ ! -f "$expected" ]]; then
                echo "$expected does not exist, will build."
                needs_build+=("$config")
              else
                echo "$expected exists. Skipping build."
              fi
            done
          fi

          if [ ${#needs_build[@]} -eq 0 ]; then
            json="[]"
          else
            json=$(printf '%s\n' "${needs_build[@]}" | jq -R . | jq -cs .)
          fi
          echo "files=$json" >> $GITHUB_OUTPUT

  build-firmware:
    needs: determine-build
    runs-on: ubuntu-latest
    if: needs.determine-build.outputs.files != '[]'

    strategy:
      matrix:
        files: ${{ fromJson(needs.determine-build.outputs.files) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install ESPHome
        run: |
          pip3 install wheel
          pip3 install esphome

      - name: Download ESPHome Config Files
        run: |
          curl -L -o circuitsetup-gdo-default.yaml https://raw.githubusercontent.com/CircuitSetup/circuitsetup-esphome/master/circuitsetup-gdo-default.yaml
          curl -L -o circuitsetup-gdo-dry-contact.yaml https://raw.githubusercontent.com/CircuitSetup/circuitsetup-esphome/master/circuitsetup-gdo-dry-contact.yaml
          curl -L -o 6chan_energy_meter_main_board.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_main_board.yaml
          curl -L -o 6chan_energy_meter_1-addon.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_1-addon.yaml
          curl -L -o 6chan_energy_meter_2-addons.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_2-addons.yaml
          curl -L -o 6chan_energy_meter_main_ethernet.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_main_ethernet.yaml
          curl -L -o 6chan_energy_meter_1-addon_ethernet.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_1-addon_ethernet.yaml
          curl -L -o 6chan_energy_meter_2-addons_ethernet.yaml https://raw.githubusercontent.com/CircuitSetup/Expandable-6-Channel-ESP32-Energy-Meter/master/Software/ESPHome/6chan_energy_meter_2-addons_ethernet.yaml

      - name: Compile ESPHome
        run: esphome -v compile "${{ matrix.files }}"

      - name: Create firmware directory
        run: mkdir -p firmware

      - name: Move the single combined file
        id: firmware
        run: |
          version="${{ needs.determine-build.outputs.version }}"
          filename=$(basename "${{ matrix.files }}" .yaml)-${version}.bin
          find .esphome/build -type f -name "firmware.factory.bin" -exec \
            mv {} "firmware/${filename}" \;
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: Create a manifests directory
        run: mkdir -p manifests
        
      - name: Build Manifest for Secplus GDO
        if: ${{ endsWith(matrix.files, 'circuitsetup-gdo-default.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup Security+ Garage Door Opener
          MANIFEST_FNAME: manifest_secplus_gdo.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for GDO Dry Contact
        if: ${{ endsWith(matrix.files, 'circuitsetup-gdo-dry-contact.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup Garage Door Opener Dry Contact
          MANIFEST_FNAME: manifest_gdo_dry_contact.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_main_board.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Main
          MANIFEST_FNAME: manifest_6_channel_meter.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter + 1 Add-on
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_1-addon.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Main + 1 Add-on
          MANIFEST_FNAME: manifest_6_channel_meter_1-addon.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter + 2 Add-ons
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_2-addons.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Main + 2 Add-ons
          MANIFEST_FNAME: manifest_6_channel_meter_2-addons.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter Ethernet
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_main_ethernet.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter Ethernet
          MANIFEST_FNAME: manifest_6_channel_meter_ethernet.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter + 1 Add-on Ethernet
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_1-addon_ethernet.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter + 1 Add-on Ethernet
          MANIFEST_FNAME: manifest_6_channel_meter_1-addon_ethernet.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}

      - name: Build Manifest for 6 Channel Meter + 2 Add-ons Ethernet
        if: ${{ endsWith(matrix.files, '6chan_energy_meter_2-addons_ethernet.yaml') }}
        run: |
          ruby ./scripts/update-espwebtools-manifests.rb
        env:
          MANIFEST_NAME: CircuitSetup 6 Channel Energy Meter + 2 Add-ons Ethernet
          MANIFEST_FNAME: manifest_6_channel_meter_2-addons_ethernet.json
          MANIFEST_VERSION: "${{ steps.esphome_version.outputs.version }}"          
          ESP32_S3_IMAGE_URI: https://circuitsetup.github.io/ESPWebInstaller/firmware/${{ steps.firmware.outputs.filename }}
        
      - name: Commit firmware to repo
        if: always()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git config pull.rebase false
          git add firmware
          git add manifests
          git commit -m "Add compiled firmware for all devices" || echo "No changes to commit."
          
          attempts=0
          max_attempts=5
          
          until git pull origin main --no-edit && git push origin HEAD:main; do
            attempts=$((attempts+1))
            if [ $attempts -ge $max_attempts ]; then
              echo "Max push attempts reached, exiting with failure."
              exit 1
            fi
            echo "Push failed due to remote changes, retrying in 10 seconds... (attempt $attempts of $max_attempts)"
            sleep 10
          done
